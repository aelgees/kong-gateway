version: "3.9"

services:
  kong-database:
    image: postgres:9.6-alpine
    container_name: kong-database
    restart: on-failure
    environment:
      POSTGRES_USER: pg-user
      POSTGRES_PASSWORD: pg-password
      POSTGRES_DB: kong
    ports:
      - 5432:5432
    networks:
      - kong-gateway
    volumes:
      - kong-database:/var/lib/postgresql/data

  kong-migrate:
    image: kong:latest
    container_name: kong-migrate
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: pg-user
      KONG_PG_PASSWORD: pg-password
      KONG_PG_DATABASE: kong
    networks:
      - kong-gateway
    command: kong migrations bootstrap -v

  kong:
    image: kong:latest
    container_name: kong
    restart: always
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: pg-user
      KONG_PG_PASSWORD: pg-password
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
      - "8444:8444"
    networks:
      - kong-gateway

  konga-prepare:
    image: pantsel/konga:latest
    container_name: konga-prepare
    command: "-c prepare -a postgres -u postgresql://pg-user:pg-password@kong-database:5432/konga"
    networks:
      - kong-gateway
    restart: on-failure
    links:
      - kong-database
    depends_on:
      - kong-database

  konga:
    image: pantsel/konga:latest
    container_name: konga
    restart: always
    environment:
      NODE_ENV: production
      DB_ADAPTER: postgres
      DB_URI: postgresql://pg-user:pg-password@kong-database:5432/konga
    ports:
      - "9090:1337"
    networks:
      - kong-gateway

networks:
  kong-gateway:
    external: true

volumes:
  kong-database:
